name: Build and Publish Docker Images

on:
  push:
    tags:
      - 'v*'  # Run only when tags matching v* are pushed
  pull_request:
    branches: [main]
  # Allow manual trigger
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME_PREFIX: ${{ github.repository }}

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Run tests
        run: dotnet test --no-build --verbosity normal

  build-and-push-images:
    runs-on: ubuntu-latest
    needs: run-tests
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service: [consumer, publisher, worker]
        include:
          - service: consumer
            dockerfile: ./src/consumer/Dockerfile
            context: ./src/consumer/
          - service: publisher
            dockerfile: ./src/publisher/Dockerfile
            context: ./src/publisher/
          - service: worker
            dockerfile: ./src/worker/Dockerfile
            context: ./src/worker/

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PREFIX }}/${{ matrix.service }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=pr
            type=sha,format=short
            latest
            type=raw,value=latest,enable=${{ github.ref_type == 'tag' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
